buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
        gradleDockerVersion = '1.2'
    }
    ext.baseVersion = "1.0"
    ext.snapshotVersion = true

    group = "org.sonarqube"
    version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:${gradleDockerVersion}"
    }
    // this allows the spring dependency management plugin
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}
plugins {
    id "java"
    id "jacoco"
    id "groovy"
    id "org.sonarqube" version "2.5"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'docker'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"

    // this uses the spring dependency plugin to pull a Maven BOM - containing a curated set of dependencies
    // see https://projects.spring.io/spring-cloud/ - Release train contents: Edgware.RELEASE
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.RELEASE'
        }
    }

    plugins.withType(JavaPlugin) {
        test {
            ignoreFailures true
        }
    }

    plugins.withType(JavaPlugin) {
        test {
            ignoreFailures false
        }
    }

    // common jars for all service sub-projects using spring boot and cloud
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.cloud:spring-cloud-starter-config')
        compile('org.jolokia:jolokia-core')

        //Lombok
        compile('org.projectlombok:lombok')

        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('junit:junit')
    }

    // Default test task to include only unit tests
    test {
        useJUnit {
            excludeCategories 'com.fsd.support.tests.SmokeTest'
        }
    }

    task buildDocker(type: Docker) {
        baseImage = 'openjdk:8-jdk-alpine'
        push = project.hasProperty('push')
        tag = "fsdapps/" + jar.baseName
        addFile {
            from jar
            rename {'app.jar'}
        }

        runCommand 'apk update ' +
                '&& apk upgrade ' +
                '&& apk add --no-cache curl '

        entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
        // exposePort(8080)
    }

    buildDocker.dependsOn(build)
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}
group 'com.fsd.support-services.config'
version '1.0-SNAPSHOT'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

