buildscript {
    ext {
        springBootVersion = '2.2.1.RELEASE'
        gradleDockerVersion = '1.2'
    }
    ext.baseVersion = "1.0"
    ext.snapshotVersion = true

    version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:${gradleDockerVersion}"
    }
}

plugins {
    id "org.sonarqube" version "3.0"
}

sonarqube{
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "support-services"
        property "sonar.projectKey", "org.sonarqube:support-services"
        property "sonar.groovy.binaries", "${project.buildDir.name}${File.separator}classes"
        property "sonar.groovy.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property 'sonar.coverage.exclusions', "**/com/fsd/**Application*, **/com/fsd/**/configurations/*, **/com/fsd/**/exception/*, **/com/fsd/**/models/*"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'docker'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'groovy'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    ext {
        springCloudVersion = 'Hoxton.SR6'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    plugins.withType(JavaPlugin) {
        test {
            ignoreFailures true
        }
    }

    plugins.withType(JavaPlugin) {
        test {
            ignoreFailures false
        }
    }

    // common jars for all service sub-projects using spring boot and cloud
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile("org.springframework.cloud:spring-cloud-starter-config")
        compile('org.jolokia:jolokia-core')

        //Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    // Default test task to include only unit tests
    test {
        useJUnit {
            excludeCategories 'com.fsd.support.tests.SmokeTest'
        }
    }

    task buildDocker(type: Docker) {
        baseImage = 'openjdk:8-jdk-alpine'
        push = project.hasProperty('push')
        tag = "fsdapps/" + jar.baseName
        addFile {
            from jar
            rename {'app.jar'}
        }

        runCommand 'apk update ' +
                '&& apk upgrade ' +
                '&& apk add --no-cache curl '

        entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
        // exposePort(8080)
    }

    buildDocker.dependsOn(build)
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

bootJar { enabled = false}

group 'com.fsd.support-services.config'
version '1.0-SNAPSHOT'


