version: '3'

networks:
  fsd:
    driver: bridge

volumes:
  nexus-data:
  jenkins-data:
  esdata1:
    driver: local

services:
  nexus:
    image: clearent/nexus
    restart: always
    ports:
      - "18081:8081"
    networks:
      - fsd
    #volumes:
      #- nexus-data:/nexus-data
  jenkins:
    image: jenkinsci/blueocean
    restart: always
    ports:
      - "18080:8080"
    networks:
      - fsd
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
      #- /usr/bin/docker:/usr/bin/docker
      #- jenkins-data:/var/lib/jenkins/
    depends_on:
      - nexus
    environment:
      - NEXUS_PORT=8081

  redis:
    image: sameersbn/redis:latest
    networks:
      - fsd
    #volumes:
      #- /opt/data/gitlab/redis:/var/lib/redis

  postgresql:
    image: sameersbn/postgresql:9.6-2
    environment:
      - DEBUG=true
      - DB_USER=gitlab
      - DB_PASS=password
      - DB_NAME=gitlabhq_production
      - DB_EXTENSION=pg_trgm
      - PG_TRUST_LOCALNET=true
    networks:
      - fsd
    ports:
      - "15432:5432"
    #volumes:
      #- /srv/docker/gitlab/postgresql:/var/lib/postgresql
  gitlab:
    image: sameersbn/gitlab:latest
    depends_on:
      - redis
      - postgresql
    networks:
      - fsd
    ports:
      - "8082:80"
      - "8022:22"
    environment:
      - DEBUG=true
      - TZ=Europe/Berlin
      - GITLAB_TIMEZONE=Berlin
      - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string
      - GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string
      - GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alpha-numeric-string
      - GITLAB_HOST=localhost
      - GITLAB_PORT=8082
      - GITLAB_SSH_PORT=8022

      - DB_ADAPTER=postgresql
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=gitlab
      - DB_PASS=password
      - DB_NAME=gitlabhq_production

      - REDIS_HOST=redis
      - REDIS_PORT=6379
    #volumes:
      #- /srv/docker/gitlab/gitlab:/home/git/data

  sonardb:
    restart: always
    image: postgres:9.6
    ports:
      - "5432:5432"
    networks:
      - fsd
    environment:
     - POSTGRES_USER=sonar
     - POSTGRES_PASSWORD=sonar

  sonarqube:
    image: sonarqube
    depends_on:
      - redis
      - sonardb
    networks:
      - fsd
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.3
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - fsd

  logstash:
    image: ludekvesely/logstash-json
    environment:
      - DROP_NON_JSON=false
      - STDOUT=true
    links:
      - elasticsearch
    networks:
      - fsd

  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    networks:
      - fsd

  logspout:
    image: gliderlabs/logspout:v3.2.4
    command: 'syslog://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    networks:
      - fsd